package PaooGame.Maps;

import PaooGame.Items.Enemies.BigDemon;
import PaooGame.Items.Enemies.BigZombie;
import PaooGame.Items.Enemies.LittleSkeleton;
import PaooGame.RefLinks;
import PaooGame.Tiles.Tile;

import java.awt.*;

public class Level3 extends Map {

    private final BigDemon dem;
    private final BigZombie zom;
    private final LittleSkeleton ske;

    private final BigDemon dem2;
    private final BigZombie zom2;
    private final LittleSkeleton ske2;

    public Level3(RefLinks refLink) {
        super(refLink);

        dem = new BigDemon(refLink,800 ,500 );
        zom = new BigZombie(refLink, 800 , 600);
        ske = new LittleSkeleton(refLink,1000 , 600);

        dem2 = new BigDemon(refLink,850 ,500 );
        zom2 = new BigZombie(refLink, 700 , 600);
        ske2 = new LittleSkeleton(refLink,1100 , 600);
    }

    @Override
    public void Update() {
        dem.Update();
    }

    @Override
    public void Draw(Graphics g)
    {
        Tile t;
        g.setColor(Color.GREEN);
        ///Se parcurge matricea de dale (codurile aferente) si se deseneaza harta respectiva
        for(int y = 0; y <32; y++)
        {
            for(int x = 0; x <32; x++)
            {
                t = GetTile(x,y);
                if(t != null) {
                    t.Draw(g, x * Tile.TILE_HEIGHT, y * Tile.TILE_WIDTH);
                }
                //g.drawString(String.valueOf(y*32+x), x *Tile.TILE_HEIGHT, (y+1) * Tile.TILE_WIDTH);
            }
        }


        dem.Draw(g);
        //zom.Draw(g);
        // ske.Draw(g);

        //dem2.Draw(g);
        //zom2.Draw(g);
        //ske2.Draw(g);
    }

    @Override
    int currentLevelMap(int x, int y) {
        final int[][] map = {
                {99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
                {99,99,99,19,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,21,99,99,99,99,99,99},
                {99,99,99,13,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,14,99,99,99,99,99,99},
                {99,99,99,13,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,14,99,99,99,99,99,99},
                {99,99,99,13,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,14,99,99,99,99,99,99},
                {99,99,99,13,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,14,99,99,99,99,99,99},
                {99,99,99,20,12,12,15,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,14,99,99,99,99,99,99},
                {99,99,99,19,11,11,16,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,14,99,99,99,99,99,99},
                {99,99,99,13,10,10,10,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,14,99,99,99,99,99,99},
                {99,99,99,13,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,14,99,99,99,99,99,99},
                {99,99,99,13,2,2,2,2,2,2,10,10,10,10,10,2,2,2,2,2,2,2,2,2,2,14,99,99,99,99,99,99},
                {99,99,99,13,2,2,2,2,2,2,2,10,10,10,2,2,2,2,2,2,2,2,2,2,2,14,99,99,99,99,99,99},
                {99,99,99,20,12,12,15,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,14,99,99,99,99,99,99},
                {99,99,99,19,11,11,16,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,14,99,99,99,99,99,99},
                {99,99,99,13,10,10,10,2,2,2,2,2,2,10,10,10,2,2,2,2,2,2,2,2,2,14,99,99,99,99,99,99},
                {99,99,99,13,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,14,99,99,99,99,99,99},
                {99,99,99,13,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,14,99,99,99,99,99,99},
                {99,99,99,13,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,14,99,99,99,99,99,99},
                {99,99,99,13,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,14,99,99,99,99,99,99},
                { 99,99,99,99,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,99,99,99,99,99,99,99},
                {99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
                {99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
                {99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
                {99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
                {99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
                {99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
                {99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
                {99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
                {99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
                {99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
                {99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99},
                {99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99}
        };
        return map[x][y];
    }

}
